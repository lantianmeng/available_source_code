// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: activation.proto
#include "stdafx.h"
#include "activation.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace service {
class NullRespDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<NullResp>
      _instance;
} _NullResp_default_instance_;
class ActivationReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ActivationReq>
      _instance;
} _ActivationReq_default_instance_;
}  // namespace service
namespace protobuf_activation_2eproto {
void InitDefaultsNullRespImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::service::_NullResp_default_instance_;
    new (ptr) ::service::NullResp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::service::NullResp::InitAsDefaultInstance();
}

void InitDefaultsNullResp() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsNullRespImpl);
}

void InitDefaultsActivationReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::service::_ActivationReq_default_instance_;
    new (ptr) ::service::ActivationReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::service::ActivationReq::InitAsDefaultInstance();
}

void InitDefaultsActivationReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsActivationReqImpl);
}

::google::protobuf::Metadata file_level_metadata[2];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service::NullResp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service::ActivationReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service::ActivationReq, symbol_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service::ActivationReq, activation_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service::ActivationReq, cmd_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service::ActivationReq, mt4_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service::ActivationReq, volume_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service::ActivationReq, ticket_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service::ActivationReq, open_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service::ActivationReq, close_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service::ActivationReq, open_price_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service::ActivationReq, close_price_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service::ActivationReq, profit_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service::ActivationReq, sl_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service::ActivationReq, tp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service::ActivationReq, expiration_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service::ActivationReq, time_stamp_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::service::NullResp)},
  { 5, -1, sizeof(::service::ActivationReq)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::service::_NullResp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::service::_ActivationReq_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "activation.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\020activation.proto\022\007service\"\n\n\010NullResp\""
      "\220\002\n\rActivationReq\022\016\n\006symbol\030\001 \001(\t\022\022\n\nact"
      "ivation\030\002 \001(\005\022\013\n\003cmd\030\003 \001(\005\022\016\n\006mt4_id\030\004 \001"
      "(\005\022\016\n\006volume\030\005 \001(\005\022\016\n\006ticket\030\006 \001(\005\022\021\n\top"
      "en_time\030\007 \001(\003\022\022\n\nclose_time\030\010 \001(\003\022\022\n\nope"
      "n_price\030\t \001(\001\022\023\n\013close_price\030\n \001(\001\022\016\n\006pr"
      "ofit\030\013 \001(\001\022\n\n\002sl\030\014 \001(\001\022\n\n\002tp\030\r \001(\001\022\022\n\nex"
      "piration\030\016 \001(\003\022\022\n\ntime_stamp\030\017 \001(\0032H\n\013MT"
      "4Callback\0229\n\nActivation\022\026.service.Activa"
      "tionReq\032\021.service.NullResp\"\000b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 396);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "activation.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_activation_2eproto
namespace service {

// ===================================================================

void NullResp::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

NullResp::NullResp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_activation_2eproto::InitDefaultsNullResp();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:service.NullResp)
}
NullResp::NullResp(const NullResp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:service.NullResp)
}

void NullResp::SharedCtor() {
  _cached_size_ = 0;
}

NullResp::~NullResp() {
  // @@protoc_insertion_point(destructor:service.NullResp)
  SharedDtor();
}

void NullResp::SharedDtor() {
}

void NullResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NullResp::descriptor() {
  ::protobuf_activation_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_activation_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const NullResp& NullResp::default_instance() {
  ::protobuf_activation_2eproto::InitDefaultsNullResp();
  return *internal_default_instance();
}

NullResp* NullResp::New(::google::protobuf::Arena* arena) const {
  NullResp* n = new NullResp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void NullResp::Clear() {
// @@protoc_insertion_point(message_clear_start:service.NullResp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool NullResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:service.NullResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:service.NullResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:service.NullResp)
  return false;
#undef DO_
}

void NullResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:service.NullResp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:service.NullResp)
}

::google::protobuf::uint8* NullResp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:service.NullResp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:service.NullResp)
  return target;
}

size_t NullResp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:service.NullResp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NullResp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:service.NullResp)
  GOOGLE_DCHECK_NE(&from, this);
  const NullResp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const NullResp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:service.NullResp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:service.NullResp)
    MergeFrom(*source);
  }
}

void NullResp::MergeFrom(const NullResp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:service.NullResp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void NullResp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:service.NullResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NullResp::CopyFrom(const NullResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:service.NullResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NullResp::IsInitialized() const {
  return true;
}

void NullResp::Swap(NullResp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NullResp::InternalSwap(NullResp* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata NullResp::GetMetadata() const {
  protobuf_activation_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_activation_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ActivationReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ActivationReq::kSymbolFieldNumber;
const int ActivationReq::kActivationFieldNumber;
const int ActivationReq::kCmdFieldNumber;
const int ActivationReq::kMt4IdFieldNumber;
const int ActivationReq::kVolumeFieldNumber;
const int ActivationReq::kTicketFieldNumber;
const int ActivationReq::kOpenTimeFieldNumber;
const int ActivationReq::kCloseTimeFieldNumber;
const int ActivationReq::kOpenPriceFieldNumber;
const int ActivationReq::kClosePriceFieldNumber;
const int ActivationReq::kProfitFieldNumber;
const int ActivationReq::kSlFieldNumber;
const int ActivationReq::kTpFieldNumber;
const int ActivationReq::kExpirationFieldNumber;
const int ActivationReq::kTimeStampFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ActivationReq::ActivationReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_activation_2eproto::InitDefaultsActivationReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:service.ActivationReq)
}
ActivationReq::ActivationReq(const ActivationReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  symbol_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.symbol().size() > 0) {
    symbol_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.symbol_);
  }
  ::memcpy(&activation_, &from.activation_,
    static_cast<size_t>(reinterpret_cast<char*>(&ticket_) -
    reinterpret_cast<char*>(&activation_)) + sizeof(ticket_));
  // @@protoc_insertion_point(copy_constructor:service.ActivationReq)
}

void ActivationReq::SharedCtor() {
  symbol_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&activation_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ticket_) -
      reinterpret_cast<char*>(&activation_)) + sizeof(ticket_));
  _cached_size_ = 0;
}

ActivationReq::~ActivationReq() {
  // @@protoc_insertion_point(destructor:service.ActivationReq)
  SharedDtor();
}

void ActivationReq::SharedDtor() {
  symbol_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ActivationReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ActivationReq::descriptor() {
  ::protobuf_activation_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_activation_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ActivationReq& ActivationReq::default_instance() {
  ::protobuf_activation_2eproto::InitDefaultsActivationReq();
  return *internal_default_instance();
}

ActivationReq* ActivationReq::New(::google::protobuf::Arena* arena) const {
  ActivationReq* n = new ActivationReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ActivationReq::Clear() {
// @@protoc_insertion_point(message_clear_start:service.ActivationReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  symbol_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&activation_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ticket_) -
      reinterpret_cast<char*>(&activation_)) + sizeof(ticket_));
  _internal_metadata_.Clear();
}

bool ActivationReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:service.ActivationReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string symbol = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_symbol()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->symbol().data(), static_cast<int>(this->symbol().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "service.ActivationReq.symbol"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 activation = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &activation_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 cmd = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cmd_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 mt4_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mt4_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 volume = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &volume_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 ticket = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ticket_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 open_time = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &open_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 close_time = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &close_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double open_price = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(73u /* 73 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &open_price_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double close_price = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(81u /* 81 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &close_price_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double profit = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(89u /* 89 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &profit_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double sl = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(97u /* 97 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &sl_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double tp = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(105u /* 105 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &tp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 expiration = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &expiration_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 time_stamp = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &time_stamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:service.ActivationReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:service.ActivationReq)
  return false;
#undef DO_
}

void ActivationReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:service.ActivationReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string symbol = 1;
  if (this->symbol().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->symbol().data(), static_cast<int>(this->symbol().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "service.ActivationReq.symbol");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->symbol(), output);
  }

  // int32 activation = 2;
  if (this->activation() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->activation(), output);
  }

  // int32 cmd = 3;
  if (this->cmd() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->cmd(), output);
  }

  // int32 mt4_id = 4;
  if (this->mt4_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->mt4_id(), output);
  }

  // int32 volume = 5;
  if (this->volume() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->volume(), output);
  }

  // int32 ticket = 6;
  if (this->ticket() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->ticket(), output);
  }

  // int64 open_time = 7;
  if (this->open_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(7, this->open_time(), output);
  }

  // int64 close_time = 8;
  if (this->close_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(8, this->close_time(), output);
  }

  // double open_price = 9;
  if (this->open_price() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(9, this->open_price(), output);
  }

  // double close_price = 10;
  if (this->close_price() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(10, this->close_price(), output);
  }

  // double profit = 11;
  if (this->profit() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(11, this->profit(), output);
  }

  // double sl = 12;
  if (this->sl() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(12, this->sl(), output);
  }

  // double tp = 13;
  if (this->tp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(13, this->tp(), output);
  }

  // int64 expiration = 14;
  if (this->expiration() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(14, this->expiration(), output);
  }

  // int64 time_stamp = 15;
  if (this->time_stamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(15, this->time_stamp(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:service.ActivationReq)
}

::google::protobuf::uint8* ActivationReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:service.ActivationReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string symbol = 1;
  if (this->symbol().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->symbol().data(), static_cast<int>(this->symbol().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "service.ActivationReq.symbol");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->symbol(), target);
  }

  // int32 activation = 2;
  if (this->activation() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->activation(), target);
  }

  // int32 cmd = 3;
  if (this->cmd() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->cmd(), target);
  }

  // int32 mt4_id = 4;
  if (this->mt4_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->mt4_id(), target);
  }

  // int32 volume = 5;
  if (this->volume() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->volume(), target);
  }

  // int32 ticket = 6;
  if (this->ticket() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->ticket(), target);
  }

  // int64 open_time = 7;
  if (this->open_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(7, this->open_time(), target);
  }

  // int64 close_time = 8;
  if (this->close_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(8, this->close_time(), target);
  }

  // double open_price = 9;
  if (this->open_price() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(9, this->open_price(), target);
  }

  // double close_price = 10;
  if (this->close_price() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(10, this->close_price(), target);
  }

  // double profit = 11;
  if (this->profit() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(11, this->profit(), target);
  }

  // double sl = 12;
  if (this->sl() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(12, this->sl(), target);
  }

  // double tp = 13;
  if (this->tp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(13, this->tp(), target);
  }

  // int64 expiration = 14;
  if (this->expiration() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(14, this->expiration(), target);
  }

  // int64 time_stamp = 15;
  if (this->time_stamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(15, this->time_stamp(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:service.ActivationReq)
  return target;
}

size_t ActivationReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:service.ActivationReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string symbol = 1;
  if (this->symbol().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->symbol());
  }

  // int32 activation = 2;
  if (this->activation() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->activation());
  }

  // int32 cmd = 3;
  if (this->cmd() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->cmd());
  }

  // int32 mt4_id = 4;
  if (this->mt4_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->mt4_id());
  }

  // int32 volume = 5;
  if (this->volume() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->volume());
  }

  // int64 open_time = 7;
  if (this->open_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->open_time());
  }

  // int64 close_time = 8;
  if (this->close_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->close_time());
  }

  // double open_price = 9;
  if (this->open_price() != 0) {
    total_size += 1 + 8;
  }

  // double close_price = 10;
  if (this->close_price() != 0) {
    total_size += 1 + 8;
  }

  // double profit = 11;
  if (this->profit() != 0) {
    total_size += 1 + 8;
  }

  // double sl = 12;
  if (this->sl() != 0) {
    total_size += 1 + 8;
  }

  // double tp = 13;
  if (this->tp() != 0) {
    total_size += 1 + 8;
  }

  // int64 expiration = 14;
  if (this->expiration() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->expiration());
  }

  // int64 time_stamp = 15;
  if (this->time_stamp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->time_stamp());
  }

  // int32 ticket = 6;
  if (this->ticket() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->ticket());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ActivationReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:service.ActivationReq)
  GOOGLE_DCHECK_NE(&from, this);
  const ActivationReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ActivationReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:service.ActivationReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:service.ActivationReq)
    MergeFrom(*source);
  }
}

void ActivationReq::MergeFrom(const ActivationReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:service.ActivationReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.symbol().size() > 0) {

    symbol_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.symbol_);
  }
  if (from.activation() != 0) {
    set_activation(from.activation());
  }
  if (from.cmd() != 0) {
    set_cmd(from.cmd());
  }
  if (from.mt4_id() != 0) {
    set_mt4_id(from.mt4_id());
  }
  if (from.volume() != 0) {
    set_volume(from.volume());
  }
  if (from.open_time() != 0) {
    set_open_time(from.open_time());
  }
  if (from.close_time() != 0) {
    set_close_time(from.close_time());
  }
  if (from.open_price() != 0) {
    set_open_price(from.open_price());
  }
  if (from.close_price() != 0) {
    set_close_price(from.close_price());
  }
  if (from.profit() != 0) {
    set_profit(from.profit());
  }
  if (from.sl() != 0) {
    set_sl(from.sl());
  }
  if (from.tp() != 0) {
    set_tp(from.tp());
  }
  if (from.expiration() != 0) {
    set_expiration(from.expiration());
  }
  if (from.time_stamp() != 0) {
    set_time_stamp(from.time_stamp());
  }
  if (from.ticket() != 0) {
    set_ticket(from.ticket());
  }
}

void ActivationReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:service.ActivationReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ActivationReq::CopyFrom(const ActivationReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:service.ActivationReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ActivationReq::IsInitialized() const {
  return true;
}

void ActivationReq::Swap(ActivationReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ActivationReq::InternalSwap(ActivationReq* other) {
  using std::swap;
  symbol_.Swap(&other->symbol_);
  swap(activation_, other->activation_);
  swap(cmd_, other->cmd_);
  swap(mt4_id_, other->mt4_id_);
  swap(volume_, other->volume_);
  swap(open_time_, other->open_time_);
  swap(close_time_, other->close_time_);
  swap(open_price_, other->open_price_);
  swap(close_price_, other->close_price_);
  swap(profit_, other->profit_);
  swap(sl_, other->sl_);
  swap(tp_, other->tp_);
  swap(expiration_, other->expiration_);
  swap(time_stamp_, other->time_stamp_);
  swap(ticket_, other->ticket_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ActivationReq::GetMetadata() const {
  protobuf_activation_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_activation_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace service

// @@protoc_insertion_point(global_scope)
